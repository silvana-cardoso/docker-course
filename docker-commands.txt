# docker run -d -p 3000:80 --rm --name feedback-node:volumes

Volumes (managed by docker)
Docker sets up a folder/path on your host machine,
exact location is unknown to you.
Managed via
# docker volume
commands.
# docker volume ls

1) Anonymous volumes
It only exists as long as the container exists (with --rm)
# VOLUME [ "/app/feedback" ]
So they are recreated whenever a container is created.
Anonymous volumes are removed automatically, when a container is removed.
This happens when you start / run a container with the --rm option.
If you start a container without that option, the anonymous volume would
NOT be removed, even if you remove the container (with docker rm ...).

Still, if you then re-create and re-run the container (i.e. you run docker run ... again),
a new anonymous volume will be created.
So even though the anonymous volume wasn't removed automatically, it'll also not
be helpful because a different anonymous volume is attached the next time the container
starts (i.e. you removed the old container and run a new one).

Now you just start piling up a bunch of unused anonymous volumes - you can clear them via
# docker volume rm <VOL_NAME>
or
# docker volume prune.

2) Named volumes
Volumes will survive conttainer shutdown (--rm, so deleteed after shutdown)
Great for data which should be persistent but which you don't need to edit directly.
We can't create named volumes inside of the Dockerfile.
We create named volumes when we run a container.
They are deattached to the containers. Containers can be removed and recreated,
but the named volume is the same.

Remove image
# docker rmi <image_name:tag>
Build image
# docker build -t <image_name:tag> <path/to/Dockerfile>
# docker build -t feedback-node:volumes .
Run container with named volume and path inside of the container
#  docker run -v [volume_name]:[/path/inside/of/the/container]
#  docker run -d -p 3000:80 --rm --name feedback-app -v feedback:/app/feedback feedback-node:volumes
